{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{369:function(t,s,e){\"use strict\";e.r(s);var a=e(42),v=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h2\",{attrs:{id:\"react-生命周期函数\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react-生命周期函数\"}},[t._v(\"#\")]),t._v(\" react 生命周期函数\")]),t._v(\" \"),e(\"div\",{staticClass:\"custom-block tip\"},[e(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"**运行中**：\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"getDefaultProps\")]),t._v(\"：获取实例的默认属性\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"getInitialState\")]),t._v(\"：获取每个实例的初始化状态\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"componentWillMount\")]),t._v(\"：组件即将被装载、渲染到页面上\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"render\")]),t._v(\"：组件在这里生成虚拟的 DOM 节点\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"componentDidMount\")]),t._v(\"：组件真正在被装载之后\")])]),t._v(\" \"),e(\"div\",{staticClass:\"custom-block tip\"},[e(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"**运行中状态**：\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"componentWillReceiveProps\")]),t._v(\"：组件将要接收到属性的时候调用\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"shouldComponentUpdate\")]),t._v(\"：组件接受到新属性或者新状态的时候（可以返回 false，接收数据后不更新，阻止render 调用，后面的函数不会被继续执行了）\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"componentWillUpdate\")]),t._v(\"：组件即将更新不能修改属性和状态\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"render\")]),t._v(\"：组件重新描绘\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"componentDidUpdate\")]),t._v(\"：组件已经更新\")])]),t._v(\" \"),e(\"div\",{staticClass:\"custom-block tip\"},[e(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"**销毁阶段**：\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"componentWillUnmount\")]),t._v(\":组件即将销毁\")])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"react-中-refs-的作用\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react-中-refs-的作用\"}},[t._v(\"#\")]),t._v(\" React 中 refs 的作用\")]),t._v(\" \"),e(\"p\",[t._v(\"Refs 是 React 提供给我们的安全访问 DOM 元素或者某个组件实例的句柄。\")]),t._v(\" \"),e(\"p\",[t._v(\"我们可以为元素添加 ref 属性然后在回调函数中接受该元素在 DOM 树中的句柄，该值会作为回调函数的第一个参数返回\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"react-中有三种构建组件的方式\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react-中有三种构建组件的方式\"}},[t._v(\"#\")]),t._v(\" React 中有三种构建组件的方式\")]),t._v(\" \"),e(\"p\",[t._v(\"React.createClass()、ES6 class 和无状态函数。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"类式组件和函数比较\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#类式组件和函数比较\"}},[t._v(\"#\")]),t._v(\" 类式组件和函数比较\")]),t._v(\" \"),e(\"p\",[t._v(\"类组件可以使用其他特性，如状态 \"),e(\"code\",[t._v(\"state\")]),t._v(\" 和生命周期钩子；\")]),t._v(\" \"),e(\"p\",[t._v(\"函数组件的性能比类组件的性能要高，因为类组件使用的时候要实例化，而函数组件直接执行函数取返回结果即可。为了提高性能，尽量使用函数组件。\")])])}),[],!1,null,null,null);s.default=v.exports}}]);","extractedComments":[]}